{"ast":null,"code":"import React,{Component}from'react';import CardList from'../Components/CardList';import SearchBox from'../Components/SearchBox';import Scroll from'../Components/Scroll';// import { robots } from './robots'; disabled to pick data automatically through json placeholder users resource\nimport'./App.css';// STATE >> props\n// const state = {\n//     robots: robots,\n//     searchfield: ''\n// move it into class component>constructor }\n// const App = () => {\n//inorder to use state, we've to go for original way of creating react app using class component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{//smart components as this has class syntax & STATE \nconstructor(){super();//used in advanced js, calls constructor of componet\n//         .then(response => { compress below code by removing return & {} & replaced above\n//             return response.json();\n//         })\n//         .then(users => {\n//             this.setState({ robots: users });\n//         })\n// }\n// console.log('2');\n// console.log('componentDidMount');\nthis.onSearchChange=event=>{//not comes with react used arrow function\n// console.log(event.target.value);\nthis.setState({searchfield:event.target.value});};this.state={//state can change & effect App\nrobots:[],//replaced [robots] with [] to make data dynamic based on user input with fetch method\nsearchfield:''};// console.log('1'); to test which method is running in browser first\n// console.log('constructor');\n}componentDidMount(){//comes with react no need to use arrow function\nfetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json()).then(users=>this.setState({robots:users}));}render(){const{robots,searchfield}=this.state;//destructuring everywhere to variables ex: this.state.robots = robots\nconst filteredRobots=robots.filter(robot=>{//cleaning by replacing robots with robot for meaningful\nreturn robot.name.toLowerCase().includes(searchfield.toLowerCase());});// console.log('3');\n// console.log('render') re-renders when component loads on browser;\n// console.log(filteredRobots);\n// if (robots.length === 0) {\n// if (!robots.length) {//false - true \n//     return <h1>Loading</h1>//return Loading if there are 0 users\n// } else {//return below components if users are more than 0\n//     return (\nreturn!robots.length?/*#__PURE__*/ //simplified above to ternary operator\n_jsx(\"h1\",{children:\"Loading\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"f1 bg-light-blue dib br3 pa3 ma2 grow pointer\",children:\"RoboFriends\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:this.onSearchChange}),/*#__PURE__*/_jsx(Scroll,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})]});}}export default App;","map":{"version":3,"names":["React","Component","CardList","SearchBox","Scroll","jsx","_jsx","jsxs","_jsxs","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes","length","children","className","searchChange"],"sources":["C:/Users/Navee/OneDrive/Desktop/Web-Py/webdevcourse/ZtmWebdev/React/robofriends/src/Containers/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\n// import { robots } from './robots'; disabled to pick data automatically through json placeholder users resource\r\nimport './App.css';\r\n\r\n// STATE >> props\r\n// const state = {\r\n//     robots: robots,\r\n//     searchfield: ''\r\n// move it into class component>constructor }\r\n\r\n// const App = () => {\r\n//inorder to use state, we've to go for original way of creating react app using class component\r\nclass App extends Component {//smart components as this has class syntax & STATE \r\n    constructor() {\r\n        super()//used in advanced js, calls constructor of componet\r\n        this.state = {//state can change & effect App\r\n            robots: [],//replaced [robots] with [] to make data dynamic based on user input with fetch method\r\n            searchfield: ''\r\n        }\r\n        // console.log('1'); to test which method is running in browser first\r\n        // console.log('constructor');\r\n    }\r\n\r\n    componentDidMount() { //comes with react no need to use arrow function\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n    //         .then(response => { compress below code by removing return & {} & replaced above\r\n    //             return response.json();\r\n    //         })\r\n    //         .then(users => {\r\n    //             this.setState({ robots: users });\r\n    //         })\r\n    // }\r\n    // console.log('2');\r\n    // console.log('componentDidMount');\r\n\r\n    onSearchChange = (event) => {//not comes with react used arrow function\r\n        // console.log(event.target.value);\r\n        this.setState({ searchfield: event.target.value })\r\n\r\n    }\r\n    render() {\r\n        const { robots, searchfield } = this.state;//destructuring everywhere to variables ex: this.state.robots = robots\r\n        const filteredRobots = robots.filter(robot => {//cleaning by replacing robots with robot for meaningful\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        // console.log('3');\r\n        // console.log('render') re-renders when component loads on browser;\r\n        // console.log(filteredRobots);\r\n        // if (robots.length === 0) {\r\n        // if (!robots.length) {//false - true \r\n        //     return <h1>Loading</h1>//return Loading if there are 0 users\r\n        // } else {//return below components if users are more than 0\r\n        //     return (\r\n        return !robots.length ?//simplified above to ternary operator\r\n            <h1>Loading</h1> :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1 bg-light-blue dib br3 pa3 ma2 grow pointer'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC;AACA,MAAO,WAAW,CAElB;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,GAAG,QAAS,CAAAR,SAAU,CAAC;AACzBS,WAAWA,CAAA,CAAG,CACV,KAAK,CAAC,CAAC;AAcX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,KAEAC,cAAc,CAAIC,KAAK,EAAK,CAAC;AACzB;AACA,IAAI,CAACC,QAAQ,CAAC,CAAEC,WAAW,CAAEF,KAAK,CAACG,MAAM,CAACC,KAAM,CAAC,CAAC,CAEtD,CAAC,CA3BG,IAAI,CAACC,KAAK,CAAG,CAAC;AACVC,MAAM,CAAE,EAAE,CAAC;AACXJ,WAAW,CAAE,EACjB,CAAC,CACD;AACA;AACJ,CAEAK,iBAAiBA,CAAA,CAAG,CAAE;AAClBC,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,KAAK,EAAI,IAAI,CAACX,QAAQ,CAAC,CAAEK,MAAM,CAAEM,KAAM,CAAC,CAAC,CAAC,CACxD,CAgBAC,MAAMA,CAAA,CAAG,CACL,KAAM,CAAEP,MAAM,CAAEJ,WAAY,CAAC,CAAG,IAAI,CAACG,KAAK,CAAC;AAC3C,KAAM,CAAAS,cAAc,CAAGR,MAAM,CAACS,MAAM,CAACC,KAAK,EAAI,CAAC;AAC3C,MAAO,CAAAA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACjB,WAAW,CAACgB,WAAW,CAAC,CAAC,CAAC,CACvE,CAAC,CAAC,CACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,CAACZ,MAAM,CAACc,MAAM,eAAE;AACnB1B,IAAA,OAAA2B,QAAA,CAAI,SAAO,CAAI,CAAC,cAEZzB,KAAA,QAAK0B,SAAS,CAAC,IAAI,CAAAD,QAAA,eACf3B,IAAA,OAAI4B,SAAS,CAAC,+CAA+C,CAAAD,QAAA,CAAC,aAAW,CAAI,CAAC,cAC9E3B,IAAA,CAACH,SAAS,EAACgC,YAAY,CAAE,IAAI,CAACxB,cAAe,CAAE,CAAC,cAChDL,IAAA,CAACF,MAAM,EAAA6B,QAAA,cACH3B,IAAA,CAACJ,QAAQ,EAACgB,MAAM,CAAEQ,cAAe,CAAE,CAAC,CAChC,CAAC,EACR,CACR,CACT,CACJ,CAEA,cAAe,CAAAjB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}