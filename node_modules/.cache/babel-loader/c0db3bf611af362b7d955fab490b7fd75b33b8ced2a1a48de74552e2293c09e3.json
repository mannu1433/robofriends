{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Navee\\\\OneDrive\\\\Desktop\\\\Web-Py\\\\webdevcourse\\\\ZtmWebdev\\\\React\\\\robofriends\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\n// import { robots } from './robots'; disabled to pick data automatically through json placeholder users resource\nimport './App.css';\n\n// STATE >> props\n// const state = {\n//     robots: robots,\n//     searchfield: ''\n// move it into class component>constructor }\n\n// const App = () => {\n//inorder to use state, we've to go for original way of creating react app using class component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  //smart components as this has class syntax & STATE \n  constructor() {\n    super(); //used in advanced js, calls constructor of componet\n    this.onSearchChange = event => {\n      //not comes with react used arrow function\n      // console.log(event.target.value);\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n    this.state = {\n      //state can change & effect App\n      robots: [],\n      //replaced [robots] with [] to make data dynamic based on user input with fetch method\n      searchfield: ''\n    };\n    // console.log('1'); to test which method is running in browser first\n    // console.log('constructor');\n  }\n  componentDidMount() {\n    //comes with react no need to use arrow function\n    fetch('https://jsonplaceholder.typicode.com/users');\n    // .then(response => {\n    //     return response.json();\n    // })\n    // .then(users => {\n    //     this.setState({ robots: users });\n    // })compress\n    // console.log('2');\n    // console.log('componentDidMount');\n  }\n  render() {\n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    // console.log('3');\n    // console.log('render') re-renders when component loads on browser;\n    // console.log(filteredRobots);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1 bg-light-blue dib br3 pa3 ma2 grow pointer\",\n        children: \"RoboFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: this.onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","CardList","SearchBox","jsxDEV","_jsxDEV","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","render","filteredRobots","filter","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchChange"],"sources":["C:/Users/Navee/OneDrive/Desktop/Web-Py/webdevcourse/ZtmWebdev/React/robofriends/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\n// import { robots } from './robots'; disabled to pick data automatically through json placeholder users resource\r\nimport './App.css';\r\n\r\n// STATE >> props\r\n// const state = {\r\n//     robots: robots,\r\n//     searchfield: ''\r\n// move it into class component>constructor }\r\n\r\n// const App = () => {\r\n//inorder to use state, we've to go for original way of creating react app using class component\r\nclass App extends Component {//smart components as this has class syntax & STATE \r\n    constructor() {\r\n        super()//used in advanced js, calls constructor of componet\r\n        this.state = {//state can change & effect App\r\n            robots: [],//replaced [robots] with [] to make data dynamic based on user input with fetch method\r\n            searchfield: ''\r\n        }\r\n        // console.log('1'); to test which method is running in browser first\r\n        // console.log('constructor');\r\n    }\r\n\r\n    componentDidMount() { //comes with react no need to use arrow function\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            // .then(response => {\r\n            //     return response.json();\r\n            // })\r\n            // .then(users => {\r\n            //     this.setState({ robots: users });\r\n            // })compress\r\n        // console.log('2');\r\n        // console.log('componentDidMount');\r\n    }\r\n\r\n    onSearchChange = (event) => {//not comes with react used arrow function\r\n        // console.log(event.target.value);\r\n        this.setState({ searchfield: event.target.value })\r\n\r\n    }\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        // console.log('3');\r\n        // console.log('render') re-renders when component loads on browser;\r\n        // console.log(filteredRobots);\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f1 bg-light-blue dib br3 pa3 ma2 grow pointer'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <CardList robots={filteredRobots} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC;AACA,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,SAASL,SAAS,CAAC;EAAC;EACzBM,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IAAA,KAqBXC,cAAc,GAAIC,KAAK,IAAK;MAAC;MACzB;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEC,WAAW,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAM,CAAC,CAAC;IAEtD,CAAC;IAxBG,IAAI,CAACC,KAAK,GAAG;MAAC;MACVC,MAAM,EAAE,EAAE;MAAC;MACXJ,WAAW,EAAE;IACjB,CAAC;IACD;IACA;EACJ;EAEAK,iBAAiBA,CAAA,EAAG;IAAE;IAClBC,KAAK,CAAC,4CAA4C,CAAC;IAC/C;IACA;IACA;IACA;IACA;IACA;IACJ;IACA;EACJ;EAOAC,MAAMA,CAAA,EAAG;IACL,MAAMC,cAAc,GAAG,IAAI,CAACL,KAAK,CAACC,MAAM,CAACK,MAAM,CAACL,MAAM,IAAI;MACtD,OAAOA,MAAM,CAACM,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACT,KAAK,CAACH,WAAW,CAACW,WAAW,CAAC,CAAC,CAAC;IACnF,CAAC,CAAC;IACF;IACA;IACA;IACA,oBACIjB,OAAA;MAAKmB,SAAS,EAAC,IAAI;MAAAC,QAAA,gBACfpB,OAAA;QAAImB,SAAS,EAAC,+CAA+C;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9ExB,OAAA,CAACF,SAAS;QAAC2B,YAAY,EAAE,IAAI,CAACtB;MAAe;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChDxB,OAAA,CAACH,QAAQ;QAACa,MAAM,EAAEI;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAGd;AAEJ;AAEA,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}